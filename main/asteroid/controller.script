local start_random_timer = nil

--- Returns a random point along a rectangle
-- Used for calculating where to place an asteroid along a perimeter.
-- @param width the width of the rectangle
-- @param height the height of the rectangle
local function random_point_on_rectangle(width, height)
	local random_side = math.random(0, 3)

	if random_side == 0 then
		return math.random(0, width), 0
	elseif random_side == 1 then
		return width, math.random(0, height)
	elseif random_side == 2 then
		return math.random(0, width), height
	else
		return 0, math.random(0, height)
	end
end

local function spawn_new_asteroid(self)
	-- Don't create asteroids if there's 8 or more
	if self.count < 8 then
		local window_width, window_height = window.get_size()
		-- TODO extract magic numbers into constant
		local rand_x, rand_y = random_point_on_rectangle(window_width, window_height)
		local pos = vmath.vector3(rand_x, rand_y, 0)
		
		factory.create("factory#factory", pos, vmath.quat_rotation_z(0), {
			turn_speed = math.random(1, 3),
			speed = math.random(100, 200)
		})

		self.count = self.count + 1
	end

	-- restart asteroid spawning
	start_random_timer(self)
end

start_random_timer = function(self)
	timer.delay(math.random(7, 12), false, 
		function(self) 
			spawn_new_asteroid(self) 
		end)
end

function init(self)
	-- Current number of active asteroids
	self.count = 0

	local rand_seed = os.time()
	print("Seeding random with OS time ", rand_seed)
	math.randomseed(rand_seed)
	start_random_timer(self)
end